#include <stdio.h>
#include <stdlib.h>

int cmp(const void *a,const void *b){ return *(int*)a - *(int*)b; }

int main(){
    int n, head, disk_size, i, seek=0, index=0, direction;
    printf("Enter number of requests: "); scanf("%d",&n);
    int req[n]; printf("Enter request queue: "); for(i=0;i<n;i++) scanf("%d",&req[i]);
    printf("Enter initial head position: "); scanf("%d",&head);
    printf("Enter disk size: "); scanf("%d",&disk_size);
    printf("Enter direction (0-left,1-right): "); scanf("%d",&direction);

    qsort(req,n,sizeof(int),cmp);

    // find first request greater than head
    for(i=0;i<n;i++){ if(req[i]>=head){ index=i; break; } }

    if(direction){ // moving right
        for(i=index;i<n;i++){ seek+=abs(req[i]-head); head=req[i]; }
        seek+=abs(disk_size-1-head); head=disk_size-1;
        for(i=index-1;i>=0;i--){ seek+=abs(req[i]-head); head=req[i]; }
    } else { // moving left
        for(i=index-1;i>=0;i--){ seek+=abs(req[i]-head); head=req[i]; }
        seek+=abs(head-0); head=0;
        for(i=index;i<n;i++){ seek+=abs(req[i]-head); head=req[i]; }
    }

    printf("Total head movement = %d\n",seek);
    printf("Average seek time = %.2f\n",(float)seek/n);
    return 0;
}
