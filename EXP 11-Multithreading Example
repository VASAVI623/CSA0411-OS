#include <stdio.h>
#include <pthread.h>
#include <unistd.h>

#define NUM_THREADS 3

// Function to be executed by threads
void* thread_function(void* arg) {
    int thread_id = *((int*)arg);
    for(int i = 0; i < 5; i++) {
        printf("Thread %d: Count %d\n", thread_id, i+1);
        sleep(1); // Simulate work
    }
    return NULL;
}

int main() {
    pthread_t threads[NUM_THREADS];
    int thread_ids[NUM_THREADS];

    // Create threads
    for(int i = 0; i < NUM_THREADS; i++) {
        thread_ids[i] = i + 1;
        pthread_create(&threads[i], NULL, thread_function, (void*)&thread_ids[i]);
    }

    // Wait for all threads to complete
    for(int i = 0; i < NUM_THREADS; i++) {
        pthread_join(threads[i], NULL);
    }

    printf("All threads have completed execution.\n");

    return 0;
}
