#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define FILENAME "employees.dat"

struct Employee {
    int id;
    char name[50];
    float salary;
};

// Function to add employee records
void addEmployee() {
    struct Employee emp;
    FILE *fp = fopen(FILENAME, "ab"); // Append in binary mode
    if(fp == NULL) {
        perror("Unable to open file");
        return;
    }

    printf("Enter Employee ID: ");
    scanf("%d", &emp.id);
    printf("Enter Employee Name: ");
    scanf(" %[^\n]", emp.name);  // Read string with spaces
    printf("Enter Salary: ");
    scanf("%f", &emp.salary);

    fwrite(&emp, sizeof(emp), 1, fp);
    fclose(fp);
    printf("Employee record added successfully.\n");
}

// Function to display all employee records
void displayEmployees() {
    struct Employee emp;
    FILE *fp = fopen(FILENAME, "rb"); // Read in binary mode
    if(fp == NULL) {
        perror("Unable to open file");
        return;
    }

    printf("\nEmployee Details:\nID\tName\t\tSalary\n");
    while(fread(&emp, sizeof(emp), 1, fp)) {
        printf("%d\t%s\t\t%.2f\n", emp.id, emp.name, emp.salary);
    }

    fclose(fp);
}

// Function to update an employee record using random access
void updateEmployee() {
    int id, found = 0;
    struct Employee emp;
    FILE *fp = fopen(FILENAME, "rb+"); // Read & write in binary mode
    if(fp == NULL) {
        perror("Unable to open file");
        return;
    }

    printf("Enter Employee ID to update: ");
    scanf("%d", &id);

    while(fread(&emp, sizeof(emp), 1, fp)) {
        if(emp.id == id) {
            printf("Enter new name: ");
            scanf(" %[^\n]", emp.name);
            printf("Enter new salary: ");
            scanf("%f", &emp.salary);

            fseek(fp, -sizeof(emp), SEEK_CUR); // Move file pointer back
            fwrite(&emp, sizeof(emp), 1, fp);  // Overwrite the record
            found = 1;
            printf("Employee record updated successfully.\n");
            break;
        }
    }

    if(!found) {
        printf("Employee with ID %d not found.\n", id);
    }

    fclose(fp);
}

int main() {
    int choice;

    while(1) {
        printf("\nRandom Access File - Employee Menu:\n");
        printf("1. Add Employee\n2. Display Employees\n3. Update Employee\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch(choice) {
            case 1: addEmployee(); break;
            case 2: displayEmployees(); break;
            case 3: updateEmployee(); break;
            case 4: exit(0);
            default: printf("Invalid choice!\n");
        }
    }

    return 0;
}
